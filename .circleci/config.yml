version: '2.1'
orbs:
  node: circleci/node@5.1.0

defaults: &defaults
  docker:
    - image: cimg/python:3.13
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      pip install --user tox

prepare_build: &prepare_build
  run:
    name: Install build packages
    command: |
      pip install --user build twine

jobs:
  test_prod:
    <<: *defaults
    working_directory: ~/project/prod_env/
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning prod_env tests
          command: |
            pip install .
            tox

  upload_to_pypi:
    <<: *defaults
    working_directory: ~/project/prod_env/
    steps:
      - checkout:
          path: ~/project
      - *prepare_build
      - run:
          name: Runnning prod_env tests
          command: |
            python3 -m build 
            python3 -m twine upload -r pypi dist/*
          
  test_app:
    <<: *defaults
    working_directory: ~/project/red_wine_app/fastapi/
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  deploy_app_container_via_railway:
    <<: *defaults
    steps:
      - setup_remote_docker:
          version: default
      - checkout:
          path: ~/project/
      - node/install:
          node-version: '23.1'
      - run: node --version
      - run: npm i -g @railway/cli
      - run:
          name: Build and run Dockerfile, add project RAILWAY_TOKEN as an env variable to circleci
          command: |
            cd red_wine_app && railway up --detach -s $RAILWAY_SERVICE_NAME

  train_and_upload_regression_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/regression_model/requirements.txt
      - run: 
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/regression_model python3 packages/regression_model/regression_model/train_pipeline.py
      - run: 
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/regression_model/

  section_12_publish_docker_image_to_aws:
    <<: *defaults
    working_directory: ~/project/packages/ml_models
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publishing docker image to aws ECR
          command: |
            sudo pip install awscli
            eval $(aws ecr get-login --no-include-email --region us-east-1)
            make build-ml-api-aws tag-ml-api push-ml-api-aws
            aws ecs update-service --cluster ml-api-cluster --service custom-service --task-definition  first-run-task-definition --force-new-deployment


tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

workflows:
  version: 2

  deploy_app_to_railway:
    jobs:
      - test_app
      - deploy_app_container_via_railway:
          requires:
            - test_app
          filters:
            branches:
              only:
                - main

  test_prod_and_api:
    jobs:
      - test_app:
        filters:
          branches:
            only:
              - main
      - test_prod:
        filters:
          branches:
            only:
              - main
  
  deploy_to_pypi:
    <<: *tags_only
    jobs:
      - test_prod
      - upload_to_pypi:
          requires:
            - test_prod
          filters:
            branches:
              only:
                - main

  #     # upload after git tags are created
  #     - section_07_test_and_upload_regression_model:
  #         <<: *tags_only

  #     - section_08_deploy_app_container_via_railway:
  #        filters:
  #          branches:
  #            only:
  #              - master
  #              - demo

#  test-all:
#    jobs:
#      - test_regression_model_py36
#      - test_regression_model_py37
#      - test_regression_model_py38
#      - test_ml_api_py36
#      - test_ml_api_py37
#      # - test_ml_api_py38 pending NN model update
#      - section_9_differential_tests
#      - train_and_upload_regression_model:
#          requires:
#            - test_regression_model_py36
#            - test_regression_model_py37
#            - test_regression_model_py38
#            - test_ml_api_py36
#            - test_ml_api_py37
#            - section_9_differential_tests
#          filters:
#            branches:
#              only:
#                - master
#       - section_10_deploy_to_heroku:
#           requires:
#             - train_and_upload_regression_model
#           filters:
#             branches:
#               only:
#                 - master
#      - section_11_build_and_push_to_heroku_docker:
#          requires:
#            - train_and_upload_regression_model
#          filters:
#            branches:
#              only:
#                - master
#       - section_12_publish_docker_image_to_aws:
#           requires:
#             - train_and_upload_regression_model
#           filters:
#             branches:
#               only:
#                 - master
#      - section_13_train_and_upload_neural_network_model:
#          requires:
#            - test_regression_model
#            - test_ml_api
#            - section_9_differential_tests
#             - train_and_upload_regression_model
#           filters:
#             branches:
#               only:
#                 - master

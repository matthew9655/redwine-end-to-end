version: '2.1'
orbs:
  node: circleci/node@5.1.0

defaults: &defaults
  docker:
    - image: cimg/python:3.13
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      pip install --user tox

prepare_build: &prepare_build
  run:
    name: Install build packages
    command: |
      pip install --user build twine

jobs:
  test_prod:
    <<: *defaults
    working_directory: ~/project/prod_env/
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning prod_env tests
          command: |
            pip install .
            tox

  upload_to_pypi:
    <<: *defaults
    working_directory: ~/project/prod_env/
    steps:
      - checkout:
          path: ~/project
      - *prepare_build
      - run:
          name: Runnning prod_env tests
          command: |
            python3 -m build 
            python3 -m twine upload -r pypi dist/*
          
  test_app:
    <<: *defaults
    working_directory: ~/project/red_wine_app/fastapi/
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  deploy_app_container_via_railway:
    <<: *defaults
    steps:
      - setup_remote_docker:
          version: default
      - checkout:
          path: ~/project/
      - node/install:
          node-version: '23.1'
      - run: node --version
      - run: npm i -g @railway/cli
      - run:
          name: Build and run Dockerfile, add project RAILWAY_TOKEN as an env variable to circleci
          command: |
            cd red_wine_app && railway up --detach -s $RAILWAY_SERVICE_NAME

  publish_docker_image_to_aws:
    <<: *defaults
    working_directory: ~/project/red_wine_app
    steps:
      - setup_remote_docker:
          version: default
      - run:
          name: Publishing docker image to aws ECR
          command: |
            pip install awscli
            ls
            chmod +x push_to_aws.sh
            ./push_to_aws.sh
            

workflows:
  version: 2
  # test_prod_and_api:
  #   jobs:
  #     - test_app:
  #       filters:
  #         branches:
  #           only:
  #             - main
  #     - test_prod:
  #       filters:
  #         branches:
  #           only:
  #             - main

  # deploy_app_to_railway:
  #   jobs:
  #     - test_app
  #     - deploy_app_container_via_railway:
  #         requires:
  #           - test_app
  #         filters:
  #           branches:
  #             only:
  #               - main
  
  # deploy_to_pypi:
  #   <<: *tags_only
  #   jobs:
  #     - test_prod
  #     - upload_to_pypi:
  #         requires:
  #           - test_prod
  #         filters:
  #           branches:
  #             only:
  #               - main

  deploy_container_to_aws:
    jobs:
      # - test_app
      # - test_prod
      - publish_docker_image_to_aws:
          # requires:
          #   - test_app
          #   - test_prod
          filters:
            branches:
              only:
                - main
# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package, checks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
deps = -r requirements/requirements.txt
	
setenv =
	PYTHONPATH=src
	PYTHONHASHSEED=0

commands=
	python src/red_wine_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/}


[testenv:train]
envdir = {toxworkdir}/test_package

deps =
     {[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}
commands=
	python src/red_wine_model/train_pipeline.py


[testenv:checks]
envdir = {toxworkdir}/checks
deps = -r requirements/typing_requirements.txt
commands =
	flake8 src/red_wine_model tests
	isort src/red_wine_model tests
	black src/red_wine_model tests
	{posargs:mypy src/red_wine_model}


[flake8]
exclude = .git,env
max-line-length = 90